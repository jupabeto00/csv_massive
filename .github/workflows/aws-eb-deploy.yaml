name: Deploy Pipeline AWS EB

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - uses: actions/upload-artifact@v4
        with:
          name: app
          path: target/*.jar

  deploy:
    needs: build
    runs-on: [ ubuntu-latest ]

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Download artifact dist
        uses: actions/download-artifact@v4
        with:
          name: app

      - name: Zip application
        run: zip -r springboot-app-build.zip target/*.jar

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: 'massive-csv'
          environment_name: 'Massive-csv-env'
          region: us-east-1
          version_label: "deploy-${{ github.run_id }}"
          deployment_package: spring-app-build.zip
          use_existing_version_if_available: true
