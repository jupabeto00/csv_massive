plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.sonarqube' version '6.0.1.5171'
    id 'jacoco'
}

group = 'com.ha'
version = '0.0.1-SNAPSHOT'

allprojects {
    ext.versions = [
            mapstruct: '1.6.3',
            lombok: '1.18.36',
    ]
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


sonar {
    properties {
        property('sonar.sources', 'src/main')
        property('sonar.tests', 'src/test')
        property('sonar.host.url', System.getenv('SONAR_URL'))
        property('sonar.token', System.getenv('SONAR_TOKEN'))
        property('sonar.plugins.downloadOnlyRequired', 'true')
        property('sonar.scm.disabled', 'true')
        property('sonar.qualitygate.wait', 'false')
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'

    implementation group: 'com.opencsv', name: 'opencsv', version: '5.10'
    implementation 'io.projectreactor:reactor-core:3.5.10'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    //Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.9.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'com.h2database:h2'
}

tasks.named('sonar') {
    dependsOn tasks.test
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

